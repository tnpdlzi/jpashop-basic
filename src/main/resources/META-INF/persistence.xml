<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="hello">
        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/h2db/test"/>
            <!-- 이 부분이 중요. JPA는 특정 DB에 종속 X 각각의 데이터베이스에서 표준적이지 않은 걸 사투리 (방언)이라고 표현. -->
            <!-- 방언은 SQL 표준을 지키지 않는 특정 데이터베이스만의 고유한 기능. 그것이 dialect -->
            <!--            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect"/> 이런식-->
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <!-- 이 사이즈만큼 모아서 데이터베이스에 한 번에 보내고 네트워크로 쿼리 두 번을 보내고 디비를 커밋한다. 즉, 버퍼링 기능이 되는 거다. 모았다가 디비에 한 번에 넣기. 이런 옵션 하나로 성능이 좋아진다. -->
            <property name="hibernate.jdbc.batch_size" value="10"/>
            <!-- ddl. 개발 환경에서만 사용해야함. 이걸 쓰면 테이블을 지우고 새로 만든다. 애플리케이션 로딩 시점에 엔티티 매핑 된 애들 테이블을 다 만들어낸다.
             update문, create문, alter 등을 따로 안 해도 되고 알아서 다 해준다. value에 다양한 옵션이 있다.-->
            <property name="hibernate.hbm2ddl.auto" value="create" />
        </properties>
    </persistence-unit>
</persistence>